

#include "LCreateDefaultGenerators.h"


#include <configurator/LGeneratorMacrosLogging.h>
#include <configurator/LGeneratorHashMap.h>
#include <configurator/LGeneratorMacrosException.h>
#include <configurator/LGeneratorEnum.h>
#include <configurator/LGeneratorLogTest.h>
#include <configurator/LGeneratorTestLConversion.h>

#include <memory>


namespace CONFIGURATOR
{

    generator_vec LCreateDefaultGenerators::CreateAll(LXMLInfo xmlinfo)
    {
        vector< std::shared_ptr< LGenerator >  > generators;

        /** @bug Remove hard coded path*/
        string b = "C:/work/logmaster/";

        generators.push_back(std::make_shared < LGeneratorEnum >(b + "logging/", "LEnumAutoGen", xmlinfo));
        generators.push_back(std::make_shared < LGeneratorMacrosLogging >(b + "logging/", "LLogApiAutoGen", xmlinfo));
        generators.push_back(std::make_shared < LGeneratorMacrosException >(b+"logging/", "GExceptionAutoGen", xmlinfo));
        generators.push_back(std::make_shared < LGeneratorHashMap >(b+ "logging/", "LHashMapsAutoGen", xmlinfo));
        generators.push_back(std::make_shared < LGeneratorLogTest >(b+ "logging/","LLogTestAutoGen", xmlinfo));
        generators.push_back(std::make_shared < LGeneratorTestLConversion>("logging/unit-tests/commit/", "TestLConversionAutoGenerated", xmlinfo));

        return generators;
    }
}

