// -*- mode: c++ -*-

/***** Auto generated file: DO NOT EDIT !!!!!! *****/
/*** Generated at: Tue 23 May-2023 05:12:58  ***/
/*** Generated from config\logging.xml **/
/*** Validated by config\logging.xsd **/

/***************************************************
* @copyright Embedded Consulting AS    2023        *
* @author Per Thomas Hille <pth@embc.no>           *
***************************************************/

/********************************************************************************
*********************************************************************************
*** This file is part of logmaster.                                           ***
*** Copyright (C) 2023 Per Thomas Hille <pth@embc.no>  http:///www.embc.no    ***
*** all rights reserved                                                       ***
***                                                                           ***
*** logmaster is free software: you can redistribute it and/or modify         ***
*** it under the terms of the Lesser GNU General Public License (LGPL)        ***
*** as published by the Free Software Foundation, either version 3 of the     ***
*** License, or (at your option) any later version.                           ***
***                                                                           ***
*** logmaster is distributed in the hope that it will be useful,              ***
*** but WITHOUT ANY WARRANTY; without even the implied warranty of            ***
*** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             ***
*** GNU General Public License for more details.                              ***
***                                                                           ***
*** You should have received a copy of the Lesser GNU General Public          ***
*** License along with logmaster in the README file in the source code        ***
*** directory. If not, see <http://www.gnu.org/licenses/>.                    ***
*********************************************************************************
*********************************************************************************/

#include "TestLHashMaps.h"
#include "TestHashMapsAutoGenerated.h"
#include <utilities/GUtilities.h>
#include <logging/LHashMaps.h>
using namespace LOGMASTER;
#include <vector>
using std::vector;




TEST_F(TestHashMapsAutoGenerated, contains_enums)
{
    vector<eMSGSYSTEM>  systems = LHashMaps::GetSystemEnums();
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_EXCEPTION));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_FSM));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_MESSAGE));
  //  EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_COM));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_XML));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_DATABASE));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_USER));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_GENERAL));
    EXPECT_TRUE(g_utilities()->Contains(systems,eMSGSYSTEM::SYS_ALARM));
}


TEST_F(TestHashMapsAutoGenerated, is_subcmd)
{
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--exception-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--exception-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--exception-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--exception-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--exception-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--exception-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--ex-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--ex-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--ex-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--ex-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--ex-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--ex-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--fsm-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--fsm-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--fsm-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--fsm-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--fsm-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--fsm-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--message-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--message-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--message-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--message-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--message-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--message-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--msg-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--msg-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--msg-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--msg-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--msg-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--msg-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--com-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--com-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--com-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--com-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--com-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--com-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--xml-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--xml-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--xml-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--xml-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--xml-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--xml-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--database-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--database-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--database-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--database-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--database-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--database-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--db-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--db-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--db-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--db-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--db-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--db-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--user-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--user-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--user-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--user-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--user-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--user-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--usr-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--usr-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--usr-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--usr-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--usr-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--usr-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--general-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--general-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--general-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--general-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--general-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--general-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--gen-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--gen-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--gen-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--gen-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--gen-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--gen-force_debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--alarm-fatal"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--alarm-error"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--alarm-warning"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--alarm-info"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--alarm-debug"));
    EXPECT_TRUE(LHashMaps::IsSubCmdHash("--alarm-force_debug"));
}


